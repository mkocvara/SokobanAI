N
Q-table and Q-values
M
##########
#........#
##b....p.#
#........#
#........#
#..x.....#
#........#
##########
I
In this example, we are using a Q-table as the "brain" of the robot. [EXPLAIN MORE CLEARLY THAT THIS IS "UNDER THE HOOD"?]
The Q-table is a table of values representing how desirable each action (UP, DOWN, LEFT, RIGHT) [BIG PROBLEM, WE CALL THE "SITUATION" PART OF RULES 'ACTIONS' ALREADY, THIS WILL BE CONFUSING] is for a given situation. These values are called Q-values. 

Every time the robot receives feedback in the form of a reward, these Q-values are changed based on it. Thus, a positive reward will lead to a positive Q-value and vice versa. 

[OK? WHAT ARE Q-VALUES FOR THOUGH? I.E. THAT THEY ARE THE DECIDING FACTOR IN WHAT THE TRAINED ROBOT DOES. SHOULD BE EXPLAINED HERE.]

Try adding rules and changing the number of generations to help the robot win the level. 

[THE AI CAN STRUGGLE TO GET THE BOX ON A MARK WHICH IS NOT BY A WALL, BUT THE NEW "BOX CLOSER TO MARK RULE" FIXES IT. HOWEVER I FOUND THE RULE THAT MOVES ROBOT CLOSER TO THE BOX IS A RED HERRING AND ACHIEVES IN ROBOT LOOPING ON TWO TILES. AFTER PLAYING WITH AND WITHOUT IT, I THINK IT MIGHT BE BETTER TO REMOVE IT IN ALL HONESTY.

ANOTHER THING IS IT'S ALSO ALMOST IMPOSSIBLE WITHOUT RAISING THE EXPLORATION THRESHOLD.]